/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.jberger.pergen.generated.node;

import org.jberger.pergen.generated.analysis.Analysis;

@SuppressWarnings("nls")
public final class AFieldDefinition extends PFieldDefinition
{
    private TIdentifier _identifier_;
    private PDataType _dataType_;
    private TRequired _required_;

    public AFieldDefinition()
    {
        // Constructor
    }

    public AFieldDefinition(
        @SuppressWarnings("hiding") TIdentifier _identifier_,
        @SuppressWarnings("hiding") PDataType _dataType_,
        @SuppressWarnings("hiding") TRequired _required_)
    {
        // Constructor
        setIdentifier(_identifier_);

        setDataType(_dataType_);

        setRequired(_required_);

    }

    @Override
    public Object clone()
    {
        return new AFieldDefinition(
            cloneNode(this._identifier_),
            cloneNode(this._dataType_),
            cloneNode(this._required_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFieldDefinition(this);
    }

    public TIdentifier getIdentifier()
    {
        return this._identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(this._identifier_ != null)
        {
            this._identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identifier_ = node;
    }

    public PDataType getDataType()
    {
        return this._dataType_;
    }

    public void setDataType(PDataType node)
    {
        if(this._dataType_ != null)
        {
            this._dataType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dataType_ = node;
    }

    public TRequired getRequired()
    {
        return this._required_;
    }

    public void setRequired(TRequired node)
    {
        if(this._required_ != null)
        {
            this._required_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._required_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._identifier_)
            + toString(this._dataType_)
            + toString(this._required_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._identifier_ == child)
        {
            this._identifier_ = null;
            return;
        }

        if(this._dataType_ == child)
        {
            this._dataType_ = null;
            return;
        }

        if(this._required_ == child)
        {
            this._required_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(this._dataType_ == oldChild)
        {
            setDataType((PDataType) newChild);
            return;
        }

        if(this._required_ == oldChild)
        {
            setRequired((TRequired) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
