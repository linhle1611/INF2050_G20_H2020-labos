/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.jberger.pergen.generated.parser;

import org.jberger.pergen.generated.node.Switchable;
import org.jberger.pergen.generated.node.AUnicityInnerDefinition;
import org.jberger.pergen.generated.node.ARealDataType;
import org.jberger.pergen.generated.node.AUnicityDefinition;
import org.jberger.pergen.generated.node.AScript;
import org.jberger.pergen.generated.node.TRPar;
import org.jberger.pergen.generated.node.TLPar;
import org.jberger.pergen.generated.node.ARelationInnerDefinition;
import org.jberger.pergen.generated.node.TMany;
import org.jberger.pergen.generated.node.PMayBeZero;
import org.jberger.pergen.generated.node.TOne;
import org.jberger.pergen.generated.node.PDataType;
import org.jberger.pergen.generated.node.THas;
import org.jberger.pergen.generated.node.AStringDataType;
import org.jberger.pergen.generated.node.TIdentifier;
import org.jberger.pergen.generated.node.Token;
import org.jberger.pergen.generated.node.AManyRelationDefinition;
import org.jberger.pergen.generated.node.AMoreInnerDefinition;
import org.jberger.pergen.generated.node.PStringLength;
import org.jberger.pergen.generated.node.TTo;
import org.jberger.pergen.generated.node.TReal;
import org.jberger.pergen.generated.node.PUnicityDefinition;
import org.jberger.pergen.generated.node.PMoreInnerDefinition;
import org.jberger.pergen.generated.node.AMoreIdentifier;
import org.jberger.pergen.generated.node.TSemicolon;
import org.jberger.pergen.generated.node.AFieldDefinition;
import org.jberger.pergen.generated.node.PInnerDefinition;
import org.jberger.pergen.generated.node.AStringLength;
import org.jberger.pergen.generated.node.TDate;
import org.jberger.pergen.generated.node.PScript;
import org.jberger.pergen.generated.node.AIntegerDataType;
import org.jberger.pergen.generated.node.TZero;
import org.jberger.pergen.generated.node.Node;
import org.jberger.pergen.generated.node.Start;
import org.jberger.pergen.generated.node.TComma;
import org.jberger.pergen.generated.node.AEntityDefinition;
import org.jberger.pergen.generated.node.TEntity;
import org.jberger.pergen.generated.node.AFieldInnerDefinition;
import org.jberger.pergen.generated.node.ADateDataType;
import org.jberger.pergen.generated.node.AOneRelationDefinition;
import org.jberger.pergen.generated.node.TInteger;
import org.jberger.pergen.generated.node.AMayBeZero;
import org.jberger.pergen.generated.node.TNumber;
import org.jberger.pergen.generated.node.TString;
import org.jberger.pergen.generated.node.PRelationDefinition;
import org.jberger.pergen.generated.node.PFieldDefinition;
import org.jberger.pergen.generated.node.PEntityDefinition;
import org.jberger.pergen.generated.node.TUnique;
import org.jberger.pergen.generated.node.PMoreIdentifier;
import org.jberger.pergen.generated.node.TRequired;
import org.jberger.pergen.generated.node.EOF;
import org.jberger.pergen.generated.lexer.Lexer;
import org.jberger.pergen.generated.lexer.LexerException;
import org.jberger.pergen.generated.analysis.AnalysisAdapter;
import org.jberger.pergen.generated.analysis.Analysis;

import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser {
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList nodeList;

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer) {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException {
        // Empty body
    }

    private void push(int numstate, ArrayList listNode, boolean hidden) throws ParserException, LexerException, IOException {
        this.nodeList = listNode;

        if (!hidden) {
            filter();
        }

        if (!this.stack.hasNext()) {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index) {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while (low <= high) {
            int middle = (low + high) / 2;

            if (state < gotoTable[index][middle][0]) {
                high = middle - 1;
            } else if (state > gotoTable[index][middle][0]) {
                low = middle + 1;
            } else {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state() {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList pop() {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token) {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException {
        push(0, null, true);
        List<Node> ign = null;
        while (true) {
            while (index(this.lexer.peek()) == -1) {
                if (ign == null) {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if (ign != null) {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while (low <= high) {
                int middle = (low + high) / 2;

                if (index < Parser.actionTable[state()][middle][0]) {
                    high = middle - 1;
                } else if (index > Parser.actionTable[state()][middle][0]) {
                    low = middle + 1;
                } else {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch (this.action[0]) {
                case SHIFT: {
                    ArrayList list = new ArrayList();
                    list.add(this.lexer.next());
                    push(this.action[1], list, false);
                }
                break;
                case REDUCE:
                    switch (this.action[1]) {
                        case 0: /* reduce AAscript1Script */ {
                            ArrayList list = new0();
                            push(goTo(0), list, false);
                        }
                        break;
                        case 1: /* reduce AAscript2Script */ {
                            ArrayList list = new1();
                            push(goTo(0), list, false);
                        }
                        break;
                        case 2: /* reduce AAentitydefinition1EntityDefinition */ {
                            ArrayList list = new2();
                            push(goTo(1), list, false);
                        }
                        break;
                        case 3: /* reduce AAentitydefinition2EntityDefinition */ {
                            ArrayList list = new3();
                            push(goTo(1), list, false);
                        }
                        break;
                        case 4: /* reduce AFieldInnerDefinition */ {
                            ArrayList list = new4();
                            push(goTo(2), list, false);
                        }
                        break;
                        case 5: /* reduce ARelationInnerDefinition */ {
                            ArrayList list = new5();
                            push(goTo(2), list, false);
                        }
                        break;
                        case 6: /* reduce AUnicityInnerDefinition */ {
                            ArrayList list = new6();
                            push(goTo(2), list, false);
                        }
                        break;
                        case 7: /* reduce AMoreInnerDefinition */ {
                            ArrayList list = new7();
                            push(goTo(3), list, false);
                        }
                        break;
                        case 8: /* reduce AAfielddefinition1FieldDefinition */ {
                            ArrayList list = new8();
                            push(goTo(4), list, false);
                        }
                        break;
                        case 9: /* reduce AAfielddefinition2FieldDefinition */ {
                            ArrayList list = new9();
                            push(goTo(4), list, false);
                        }
                        break;
                        case 10: /* reduce AAonerelationdefinition1RelationDefinition */ {
                            ArrayList list = new10();
                            push(goTo(5), list, false);
                        }
                        break;
                        case 11: /* reduce AAonerelationdefinition2RelationDefinition */ {
                            ArrayList list = new11();
                            push(goTo(5), list, false);
                        }
                        break;
                        case 12: /* reduce AAmanyrelationdefinition1RelationDefinition */ {
                            ArrayList list = new12();
                            push(goTo(5), list, false);
                        }
                        break;
                        case 13: /* reduce AAmanyrelationdefinition2RelationDefinition */ {
                            ArrayList list = new13();
                            push(goTo(5), list, false);
                        }
                        break;
                        case 14: /* reduce AAunicitydefinition1UnicityDefinition */ {
                            ArrayList list = new14();
                            push(goTo(6), list, false);
                        }
                        break;
                        case 15: /* reduce AAunicitydefinition2UnicityDefinition */ {
                            ArrayList list = new15();
                            push(goTo(6), list, false);
                        }
                        break;
                        case 16: /* reduce ADateDataType */ {
                            ArrayList list = new16();
                            push(goTo(7), list, false);
                        }
                        break;
                        case 17: /* reduce AIntegerDataType */ {
                            ArrayList list = new17();
                            push(goTo(7), list, false);
                        }
                        break;
                        case 18: /* reduce ARealDataType */ {
                            ArrayList list = new18();
                            push(goTo(7), list, false);
                        }
                        break;
                        case 19: /* reduce AAstringdatatype1DataType */ {
                            ArrayList list = new19();
                            push(goTo(7), list, false);
                        }
                        break;
                        case 20: /* reduce AAstringdatatype2DataType */ {
                            ArrayList list = new20();
                            push(goTo(7), list, false);
                        }
                        break;
                        case 21: /* reduce AStringLength */ {
                            ArrayList list = new21();
                            push(goTo(8), list, false);
                        }
                        break;
                        case 22: /* reduce AMayBeZero */ {
                            ArrayList list = new22();
                            push(goTo(9), list, false);
                        }
                        break;
                        case 23: /* reduce AMoreIdentifier */ {
                            ArrayList list = new23();
                            push(goTo(10), list, false);
                        }
                        break;
                        case 24: /* reduce ATerminal$EntityDefinition */ {
                            ArrayList list = new24();
                            push(goTo(11), list, true);
                        }
                        break;
                        case 25: /* reduce ANonTerminal$EntityDefinition */ {
                            ArrayList list = new25();
                            push(goTo(11), list, true);
                        }
                        break;
                        case 26: /* reduce ATerminal$MoreInnerDefinition */ {
                            ArrayList list = new26();
                            push(goTo(12), list, true);
                        }
                        break;
                        case 27: /* reduce ANonTerminal$MoreInnerDefinition */ {
                            ArrayList list = new27();
                            push(goTo(12), list, true);
                        }
                        break;
                        case 28: /* reduce ATerminal$MoreIdentifier */ {
                            ArrayList list = new28();
                            push(goTo(13), list, true);
                        }
                        break;
                        case 29: /* reduce ANonTerminal$MoreIdentifier */ {
                            ArrayList list = new29();
                            push(goTo(13), list, true);
                        }
                        break;
                    }
                    break;
                case ACCEPT: {
                    EOF node2 = (EOF) this.lexer.next();
                    PScript node1 = (PScript) pop().get(0);
                    Start node = new Start(node1, node2);
                    return node;
                }
                case ERROR:
                    throw new ParserException(this.last_token,
                            "[" + this.last_line + "," + this.last_pos + "] " +
                                    Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }


    @SuppressWarnings("unchecked")
    ArrayList new0() /* reduce AAscript1Script */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        PScript pscriptNode1;
        {
            // Block
            LinkedList listNode2 = new LinkedList();
            {
                // Block
            }

            pscriptNode1 = new AScript(listNode2);
        }
        nodeList.add(pscriptNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new1() /* reduce AAscript2Script */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PScript pscriptNode1;
        {
            // Block
            LinkedList listNode3 = new LinkedList();
            {
                // Block
                LinkedList listNode2 = new LinkedList();
                listNode2 = (LinkedList) nodeArrayList1.get(0);
                if (listNode2 != null) {
                    listNode3.addAll(listNode2);
                }
            }

            pscriptNode1 = new AScript(listNode3);
        }
        nodeList.add(pscriptNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new2() /* reduce AAentitydefinition1EntityDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PEntityDefinition pentitydefinitionNode1;
        {
            // Block
            TEntity tentityNode2;
            TIdentifier tidentifierNode3;
            TLPar tlparNode4;
            PInnerDefinition pinnerdefinitionNode5;
            LinkedList listNode6 = new LinkedList();
            TRPar trparNode7;
            TSemicolon tsemicolonNode8;
            tentityNode2 = (TEntity) nodeArrayList1.get(0);
            tidentifierNode3 = (TIdentifier) nodeArrayList2.get(0);
            tlparNode4 = (TLPar) nodeArrayList3.get(0);
            pinnerdefinitionNode5 = (PInnerDefinition) nodeArrayList4.get(0);
            {
                // Block
            }
            trparNode7 = (TRPar) nodeArrayList5.get(0);
            tsemicolonNode8 = (TSemicolon) nodeArrayList6.get(0);

            pentitydefinitionNode1 = new AEntityDefinition(tentityNode2, tidentifierNode3, tlparNode4, pinnerdefinitionNode5, listNode6, trparNode7, tsemicolonNode8);
        }
        nodeList.add(pentitydefinitionNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new3() /* reduce AAentitydefinition2EntityDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PEntityDefinition pentitydefinitionNode1;
        {
            // Block
            TEntity tentityNode2;
            TIdentifier tidentifierNode3;
            TLPar tlparNode4;
            PInnerDefinition pinnerdefinitionNode5;
            LinkedList listNode7 = new LinkedList();
            TRPar trparNode8;
            TSemicolon tsemicolonNode9;
            tentityNode2 = (TEntity) nodeArrayList1.get(0);
            tidentifierNode3 = (TIdentifier) nodeArrayList2.get(0);
            tlparNode4 = (TLPar) nodeArrayList3.get(0);
            pinnerdefinitionNode5 = (PInnerDefinition) nodeArrayList4.get(0);
            {
                // Block
                LinkedList listNode6 = new LinkedList();
                listNode6 = (LinkedList) nodeArrayList5.get(0);
                if (listNode6 != null) {
                    listNode7.addAll(listNode6);
                }
            }
            trparNode8 = (TRPar) nodeArrayList6.get(0);
            tsemicolonNode9 = (TSemicolon) nodeArrayList7.get(0);

            pentitydefinitionNode1 = new AEntityDefinition(tentityNode2, tidentifierNode3, tlparNode4, pinnerdefinitionNode5, listNode7, trparNode8, tsemicolonNode9);
        }
        nodeList.add(pentitydefinitionNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new4() /* reduce AFieldInnerDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PInnerDefinition pinnerdefinitionNode1;
        {
            // Block
            PFieldDefinition pfielddefinitionNode2;
            pfielddefinitionNode2 = (PFieldDefinition) nodeArrayList1.get(0);

            pinnerdefinitionNode1 = new AFieldInnerDefinition(pfielddefinitionNode2);
        }
        nodeList.add(pinnerdefinitionNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new5() /* reduce ARelationInnerDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PInnerDefinition pinnerdefinitionNode1;
        {
            // Block
            PRelationDefinition prelationdefinitionNode2;
            prelationdefinitionNode2 = (PRelationDefinition) nodeArrayList1.get(0);

            pinnerdefinitionNode1 = new ARelationInnerDefinition(prelationdefinitionNode2);
        }
        nodeList.add(pinnerdefinitionNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new6() /* reduce AUnicityInnerDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PInnerDefinition pinnerdefinitionNode1;
        {
            // Block
            PUnicityDefinition punicitydefinitionNode2;
            punicitydefinitionNode2 = (PUnicityDefinition) nodeArrayList1.get(0);

            pinnerdefinitionNode1 = new AUnicityInnerDefinition(punicitydefinitionNode2);
        }
        nodeList.add(pinnerdefinitionNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new7() /* reduce AMoreInnerDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMoreInnerDefinition pmoreinnerdefinitionNode1;
        {
            // Block
            TComma tcommaNode2;
            PInnerDefinition pinnerdefinitionNode3;
            tcommaNode2 = (TComma) nodeArrayList1.get(0);
            pinnerdefinitionNode3 = (PInnerDefinition) nodeArrayList2.get(0);

            pmoreinnerdefinitionNode1 = new AMoreInnerDefinition(tcommaNode2, pinnerdefinitionNode3);
        }
        nodeList.add(pmoreinnerdefinitionNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new8() /* reduce AAfielddefinition1FieldDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFieldDefinition pfielddefinitionNode1;
        {
            // Block
            TIdentifier tidentifierNode2;
            PDataType pdatatypeNode3;
            @SuppressWarnings("unused") Object nullNode4 = null;
            tidentifierNode2 = (TIdentifier) nodeArrayList1.get(0);
            pdatatypeNode3 = (PDataType) nodeArrayList2.get(0);

            pfielddefinitionNode1 = new AFieldDefinition(tidentifierNode2, pdatatypeNode3, null);
        }
        nodeList.add(pfielddefinitionNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new9() /* reduce AAfielddefinition2FieldDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFieldDefinition pfielddefinitionNode1;
        {
            // Block
            TIdentifier tidentifierNode2;
            PDataType pdatatypeNode3;
            TRequired trequiredNode4;
            tidentifierNode2 = (TIdentifier) nodeArrayList1.get(0);
            pdatatypeNode3 = (PDataType) nodeArrayList2.get(0);
            trequiredNode4 = (TRequired) nodeArrayList3.get(0);

            pfielddefinitionNode1 = new AFieldDefinition(tidentifierNode2, pdatatypeNode3, trequiredNode4);
        }
        nodeList.add(pfielddefinitionNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new10() /* reduce AAonerelationdefinition1RelationDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PRelationDefinition prelationdefinitionNode1;
        {
            // Block
            THas thasNode2;
            @SuppressWarnings("unused") Object nullNode3 = null;
            TOne toneNode4;
            TIdentifier tidentifierNode5;
            thasNode2 = (THas) nodeArrayList1.get(0);
            toneNode4 = (TOne) nodeArrayList2.get(0);
            tidentifierNode5 = (TIdentifier) nodeArrayList3.get(0);

            prelationdefinitionNode1 = new AOneRelationDefinition(thasNode2, null, toneNode4, tidentifierNode5);
        }
        nodeList.add(prelationdefinitionNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new11() /* reduce AAonerelationdefinition2RelationDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PRelationDefinition prelationdefinitionNode1;
        {
            // Block
            THas thasNode2;
            PMayBeZero pmaybezeroNode3;
            TOne toneNode4;
            TIdentifier tidentifierNode5;
            thasNode2 = (THas) nodeArrayList1.get(0);
            pmaybezeroNode3 = (PMayBeZero) nodeArrayList2.get(0);
            toneNode4 = (TOne) nodeArrayList3.get(0);
            tidentifierNode5 = (TIdentifier) nodeArrayList4.get(0);

            prelationdefinitionNode1 = new AOneRelationDefinition(thasNode2, pmaybezeroNode3, toneNode4, tidentifierNode5);
        }
        nodeList.add(prelationdefinitionNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new12() /* reduce AAmanyrelationdefinition1RelationDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PRelationDefinition prelationdefinitionNode1;
        {
            // Block
            THas thasNode2;
            @SuppressWarnings("unused") Object nullNode3 = null;
            TMany tmanyNode4;
            TIdentifier tidentifierNode5;
            thasNode2 = (THas) nodeArrayList1.get(0);
            tmanyNode4 = (TMany) nodeArrayList2.get(0);
            tidentifierNode5 = (TIdentifier) nodeArrayList3.get(0);

            prelationdefinitionNode1 = new AManyRelationDefinition(thasNode2, null, tmanyNode4, tidentifierNode5);
        }
        nodeList.add(prelationdefinitionNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new13() /* reduce AAmanyrelationdefinition2RelationDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PRelationDefinition prelationdefinitionNode1;
        {
            // Block
            THas thasNode2;
            PMayBeZero pmaybezeroNode3;
            TMany tmanyNode4;
            TIdentifier tidentifierNode5;
            thasNode2 = (THas) nodeArrayList1.get(0);
            pmaybezeroNode3 = (PMayBeZero) nodeArrayList2.get(0);
            tmanyNode4 = (TMany) nodeArrayList3.get(0);
            tidentifierNode5 = (TIdentifier) nodeArrayList4.get(0);

            prelationdefinitionNode1 = new AManyRelationDefinition(thasNode2, pmaybezeroNode3, tmanyNode4, tidentifierNode5);
        }
        nodeList.add(prelationdefinitionNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new14() /* reduce AAunicitydefinition1UnicityDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnicityDefinition punicitydefinitionNode1;
        {
            // Block
            TUnique tuniqueNode2;
            TLPar tlparNode3;
            TIdentifier tidentifierNode4;
            LinkedList listNode5 = new LinkedList();
            TRPar trparNode6;
            tuniqueNode2 = (TUnique) nodeArrayList1.get(0);
            tlparNode3 = (TLPar) nodeArrayList2.get(0);
            tidentifierNode4 = (TIdentifier) nodeArrayList3.get(0);
            {
                // Block
            }
            trparNode6 = (TRPar) nodeArrayList4.get(0);

            punicitydefinitionNode1 = new AUnicityDefinition(tuniqueNode2, tlparNode3, tidentifierNode4, listNode5, trparNode6);
        }
        nodeList.add(punicitydefinitionNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new15() /* reduce AAunicitydefinition2UnicityDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnicityDefinition punicitydefinitionNode1;
        {
            // Block
            TUnique tuniqueNode2;
            TLPar tlparNode3;
            TIdentifier tidentifierNode4;
            LinkedList listNode6 = new LinkedList();
            TRPar trparNode7;
            tuniqueNode2 = (TUnique) nodeArrayList1.get(0);
            tlparNode3 = (TLPar) nodeArrayList2.get(0);
            tidentifierNode4 = (TIdentifier) nodeArrayList3.get(0);
            {
                // Block
                LinkedList listNode5 = new LinkedList();
                listNode5 = (LinkedList) nodeArrayList4.get(0);
                if (listNode5 != null) {
                    listNode6.addAll(listNode5);
                }
            }
            trparNode7 = (TRPar) nodeArrayList5.get(0);

            punicitydefinitionNode1 = new AUnicityDefinition(tuniqueNode2, tlparNode3, tidentifierNode4, listNode6, trparNode7);
        }
        nodeList.add(punicitydefinitionNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new16() /* reduce ADateDataType */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDataType pdatatypeNode1;
        {
            // Block
            TDate tdateNode2;
            tdateNode2 = (TDate) nodeArrayList1.get(0);

            pdatatypeNode1 = new ADateDataType(tdateNode2);
        }
        nodeList.add(pdatatypeNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new17() /* reduce AIntegerDataType */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDataType pdatatypeNode1;
        {
            // Block
            TInteger tintegerNode2;
            tintegerNode2 = (TInteger) nodeArrayList1.get(0);

            pdatatypeNode1 = new AIntegerDataType(tintegerNode2);
        }
        nodeList.add(pdatatypeNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new18() /* reduce ARealDataType */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDataType pdatatypeNode1;
        {
            // Block
            TReal trealNode2;
            trealNode2 = (TReal) nodeArrayList1.get(0);

            pdatatypeNode1 = new ARealDataType(trealNode2);
        }
        nodeList.add(pdatatypeNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new19() /* reduce AAstringdatatype1DataType */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDataType pdatatypeNode1;
        {
            // Block
            TString tstringNode2;
            @SuppressWarnings("unused") Object nullNode3 = null;
            tstringNode2 = (TString) nodeArrayList1.get(0);

            pdatatypeNode1 = new AStringDataType(tstringNode2, null);
        }
        nodeList.add(pdatatypeNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new20() /* reduce AAstringdatatype2DataType */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDataType pdatatypeNode1;
        {
            // Block
            TString tstringNode2;
            PStringLength pstringlengthNode3;
            tstringNode2 = (TString) nodeArrayList1.get(0);
            pstringlengthNode3 = (PStringLength) nodeArrayList2.get(0);

            pdatatypeNode1 = new AStringDataType(tstringNode2, pstringlengthNode3);
        }
        nodeList.add(pdatatypeNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new21() /* reduce AStringLength */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStringLength pstringlengthNode1;
        {
            // Block
            TLPar tlparNode2;
            TNumber tnumberNode3;
            TRPar trparNode4;
            tlparNode2 = (TLPar) nodeArrayList1.get(0);
            tnumberNode3 = (TNumber) nodeArrayList2.get(0);
            trparNode4 = (TRPar) nodeArrayList3.get(0);

            pstringlengthNode1 = new AStringLength(tlparNode2, tnumberNode3, trparNode4);
        }
        nodeList.add(pstringlengthNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new22() /* reduce AMayBeZero */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMayBeZero pmaybezeroNode1;
        {
            // Block
            TZero tzeroNode2;
            TTo ttoNode3;
            tzeroNode2 = (TZero) nodeArrayList1.get(0);
            ttoNode3 = (TTo) nodeArrayList2.get(0);

            pmaybezeroNode1 = new AMayBeZero(tzeroNode2, ttoNode3);
        }
        nodeList.add(pmaybezeroNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new23() /* reduce AMoreIdentifier */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMoreIdentifier pmoreidentifierNode1;
        {
            // Block
            TComma tcommaNode2;
            TIdentifier tidentifierNode3;
            tcommaNode2 = (TComma) nodeArrayList1.get(0);
            tidentifierNode3 = (TIdentifier) nodeArrayList2.get(0);

            pmoreidentifierNode1 = new AMoreIdentifier(tcommaNode2, tidentifierNode3);
        }
        nodeList.add(pmoreidentifierNode1);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new24() /* reduce ATerminal$EntityDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
            PEntityDefinition pentitydefinitionNode1;
            pentitydefinitionNode1 = (PEntityDefinition) nodeArrayList1.get(0);
            if (pentitydefinitionNode1 != null) {
                listNode2.add(pentitydefinitionNode1);
            }
        }
        nodeList.add(listNode2);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new25() /* reduce ANonTerminal$EntityDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
            LinkedList listNode1 = new LinkedList();
            PEntityDefinition pentitydefinitionNode2;
            listNode1 = (LinkedList) nodeArrayList1.get(0);
            pentitydefinitionNode2 = (PEntityDefinition) nodeArrayList2.get(0);
            if (listNode1 != null) {
                listNode3.addAll(listNode1);
            }
            if (pentitydefinitionNode2 != null) {
                listNode3.add(pentitydefinitionNode2);
            }
        }
        nodeList.add(listNode3);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new26() /* reduce ATerminal$MoreInnerDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
            PMoreInnerDefinition pmoreinnerdefinitionNode1;
            pmoreinnerdefinitionNode1 = (PMoreInnerDefinition) nodeArrayList1.get(0);
            if (pmoreinnerdefinitionNode1 != null) {
                listNode2.add(pmoreinnerdefinitionNode1);
            }
        }
        nodeList.add(listNode2);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new27() /* reduce ANonTerminal$MoreInnerDefinition */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
            LinkedList listNode1 = new LinkedList();
            PMoreInnerDefinition pmoreinnerdefinitionNode2;
            listNode1 = (LinkedList) nodeArrayList1.get(0);
            pmoreinnerdefinitionNode2 = (PMoreInnerDefinition) nodeArrayList2.get(0);
            if (listNode1 != null) {
                listNode3.addAll(listNode1);
            }
            if (pmoreinnerdefinitionNode2 != null) {
                listNode3.add(pmoreinnerdefinitionNode2);
            }
        }
        nodeList.add(listNode3);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new28() /* reduce ATerminal$MoreIdentifier */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
            PMoreIdentifier pmoreidentifierNode1;
            pmoreidentifierNode1 = (PMoreIdentifier) nodeArrayList1.get(0);
            if (pmoreidentifierNode1 != null) {
                listNode2.add(pmoreidentifierNode1);
            }
        }
        nodeList.add(listNode2);
        return nodeList;
    }


    @SuppressWarnings("unchecked")
    ArrayList new29() /* reduce ANonTerminal$MoreIdentifier */ {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
            LinkedList listNode1 = new LinkedList();
            PMoreIdentifier pmoreidentifierNode2;
            listNode1 = (LinkedList) nodeArrayList1.get(0);
            pmoreidentifierNode2 = (PMoreIdentifier) nodeArrayList2.get(0);
            if (listNode1 != null) {
                listNode3.addAll(listNode1);
            }
            if (pmoreidentifierNode2 != null) {
                listNode3.add(pmoreidentifierNode2);
            }
        }
        nodeList.add(listNode3);
        return nodeList;
    }


    private static int[][][] actionTable;
    /*      {
                {{-1, REDUCE, 0}, {4, SHIFT, 1}, },
                {{-1, ERROR, 1}, {17, SHIFT, 5}, },
                {{-1, ERROR, 2}, {18, ACCEPT, -1}, },
                {{-1, REDUCE, 24}, },
                {{-1, REDUCE, 1}, {4, SHIFT, 1}, },
                {{-1, ERROR, 5}, {0, SHIFT, 7}, },
                {{-1, REDUCE, 25}, },
                {{-1, ERROR, 7}, {5, SHIFT, 8}, {10, SHIFT, 9}, {17, SHIFT, 10}, },
                {{-1, ERROR, 8}, {6, SHIFT, 15}, {7, SHIFT, 16}, {11, SHIFT, 17}, },
                {{-1, ERROR, 9}, {0, SHIFT, 19}, },
                {{-1, ERROR, 10}, {12, SHIFT, 20}, {13, SHIFT, 21}, {14, SHIFT, 22}, {15, SHIFT, 23}, },
                {{-1, ERROR, 11}, {1, SHIFT, 25}, {2, SHIFT, 26}, },
                {{-1, REDUCE, 4}, },
                {{-1, REDUCE, 5}, },
                {{-1, REDUCE, 6}, },
                {{-1, ERROR, 15}, {17, SHIFT, 29}, },
                {{-1, ERROR, 16}, {17, SHIFT, 30}, },
                {{-1, ERROR, 17}, {9, SHIFT, 31}, },
                {{-1, ERROR, 18}, {6, SHIFT, 32}, {7, SHIFT, 33}, },
                {{-1, ERROR, 19}, {17, SHIFT, 34}, },
                {{-1, REDUCE, 16}, },
                {{-1, REDUCE, 17}, },
                {{-1, REDUCE, 18}, },
                {{-1, REDUCE, 19}, {0, SHIFT, 35}, },
                {{-1, REDUCE, 8}, {8, SHIFT, 37}, },
                {{-1, ERROR, 25}, {3, SHIFT, 38}, },
                {{-1, ERROR, 26}, {5, SHIFT, 8}, {10, SHIFT, 9}, {17, SHIFT, 10}, },
                {{-1, REDUCE, 26}, },
                {{-1, ERROR, 28}, {1, SHIFT, 40}, {2, SHIFT, 26}, },
                {{-1, REDUCE, 12}, },
                {{-1, REDUCE, 10}, },
                {{-1, REDUCE, 22}, },
                {{-1, ERROR, 32}, {17, SHIFT, 42}, },
                {{-1, ERROR, 33}, {17, SHIFT, 43}, },
                {{-1, ERROR, 34}, {1, SHIFT, 44}, {2, SHIFT, 45}, },
                {{-1, ERROR, 35}, {16, SHIFT, 48}, },
                {{-1, REDUCE, 20}, },
                {{-1, REDUCE, 9}, },
                {{-1, REDUCE, 2}, },
                {{-1, REDUCE, 7}, },
                {{-1, ERROR, 40}, {3, SHIFT, 49}, },
                {{-1, REDUCE, 27}, },
                {{-1, REDUCE, 13}, },
                {{-1, REDUCE, 11}, },
                {{-1, REDUCE, 14}, },
                {{-1, ERROR, 45}, {17, SHIFT, 50}, },
                {{-1, REDUCE, 28}, },
                {{-1, ERROR, 47}, {1, SHIFT, 51}, {2, SHIFT, 45}, },
                {{-1, ERROR, 48}, {1, SHIFT, 53}, },
                {{-1, REDUCE, 3}, },
                {{-1, REDUCE, 23}, },
                {{-1, REDUCE, 15}, },
                {{-1, REDUCE, 29}, },
                {{-1, REDUCE, 21}, },
            };*/
    private static int[][][] gotoTable;
    /*      {
                {{-1, 2}, },
                {{-1, 3}, {4, 6}, },
                {{-1, 11}, {26, 39}, },
                {{-1, 27}, {28, 41}, },
                {{-1, 12}, },
                {{-1, 13}, },
                {{-1, 14}, },
                {{-1, 24}, },
                {{-1, 36}, },
                {{-1, 18}, },
                {{-1, 46}, {47, 52}, },
                {{-1, 4}, },
                {{-1, 28}, },
                {{-1, 47}, },
            };*/
    private static String[] errorMessages;
    /*      {
                "expecting: entity, EOF",
                "expecting: identifier",
                "expecting: EOF",
                "expecting: '('",
                "expecting: has, unique, identifier",
                "expecting: many, one, zero",
                "expecting: date, integer, real, string",
                "expecting: ')', ','",
                "expecting: to",
                "expecting: many, one",
                "expecting: ')', ',', required",
                "expecting: '(', ')', ',', required",
                "expecting: ';'",
                "expecting: number",
                "expecting: ')'",
            };*/
    private static int[] errors;
/*      {
			0, 1, 2, 0, 0, 3, 0, 4, 5, 3, 6, 7, 7, 7, 7, 1, 1, 8, 9, 1, 10, 10, 10, 11, 10, 12, 4, 7, 7, 7, 7, 9, 1, 1, 7, 13, 10, 7, 0, 7, 12, 7, 7, 7, 7, 1, 7, 7, 14, 0, 7, 7, 7, 10, 
        };*/

    static {
        try {
            DataInputStream s = new DataInputStream(
                    new BufferedInputStream(
                            Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for (int i = 0; i < Parser.actionTable.length; i++) {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for (int j = 0; j < Parser.actionTable[i].length; j++) {
                    for (int k = 0; k < 3; k++) {
                        Parser.actionTable[i][j][k] = s.readInt();
                    }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for (int i = 0; i < gotoTable.length; i++) {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for (int j = 0; j < gotoTable[i].length; j++) {
                    for (int k = 0; k < 2; k++) {
                        gotoTable[i][j][k] = s.readInt();
                    }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for (int i = 0; i < errorMessages.length; i++) {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for (int j = 0; j < length; j++) {
                    buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for (int i = 0; i < errors.length; i++) {
                errors[i] = s.readInt();
            }

            s.close();
        } catch (Exception e) {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
