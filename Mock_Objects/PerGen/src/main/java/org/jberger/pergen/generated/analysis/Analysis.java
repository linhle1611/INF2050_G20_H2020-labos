/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.jberger.pergen.generated.analysis;

import org.jberger.pergen.generated.node.TZero;
import org.jberger.pergen.generated.node.AUnicityInnerDefinition;
import org.jberger.pergen.generated.node.ARealDataType;
import org.jberger.pergen.generated.node.AUnicityDefinition;
import org.jberger.pergen.generated.node.AScript;
import org.jberger.pergen.generated.node.TRPar;
import org.jberger.pergen.generated.node.Node;
import org.jberger.pergen.generated.node.TLPar;
import org.jberger.pergen.generated.node.Start;
import org.jberger.pergen.generated.node.ARelationInnerDefinition;
import org.jberger.pergen.generated.node.TComma;
import org.jberger.pergen.generated.node.TMany;
import org.jberger.pergen.generated.node.AEntityDefinition;
import org.jberger.pergen.generated.node.TOne;
import org.jberger.pergen.generated.node.TEntity;
import org.jberger.pergen.generated.node.AFieldInnerDefinition;
import org.jberger.pergen.generated.node.THas;
import org.jberger.pergen.generated.node.AStringDataType;
import org.jberger.pergen.generated.node.TIdentifier;
import org.jberger.pergen.generated.node.ADateDataType;
import org.jberger.pergen.generated.node.TComment;
import org.jberger.pergen.generated.node.AMoreInnerDefinition;
import org.jberger.pergen.generated.node.AOneRelationDefinition;
import org.jberger.pergen.generated.node.AManyRelationDefinition;
import org.jberger.pergen.generated.node.Switch;
import org.jberger.pergen.generated.node.TInteger;
import org.jberger.pergen.generated.node.AMayBeZero;
import org.jberger.pergen.generated.node.TNumber;
import org.jberger.pergen.generated.node.TTo;
import org.jberger.pergen.generated.node.TReal;
import org.jberger.pergen.generated.node.TString;
import org.jberger.pergen.generated.node.AMoreIdentifier;
import org.jberger.pergen.generated.node.TSemicolon;
import org.jberger.pergen.generated.node.TUnique;
import org.jberger.pergen.generated.node.TRequired;
import org.jberger.pergen.generated.node.AFieldDefinition;
import org.jberger.pergen.generated.node.EOF;
import org.jberger.pergen.generated.node.TBlank;
import org.jberger.pergen.generated.node.AStringLength;
import org.jberger.pergen.generated.node.TDate;
import org.jberger.pergen.generated.node.AIntegerDataType;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAScript(AScript node);
    void caseAEntityDefinition(AEntityDefinition node);
    void caseAFieldInnerDefinition(AFieldInnerDefinition node);
    void caseARelationInnerDefinition(ARelationInnerDefinition node);
    void caseAUnicityInnerDefinition(AUnicityInnerDefinition node);
    void caseAMoreInnerDefinition(AMoreInnerDefinition node);
    void caseAFieldDefinition(AFieldDefinition node);
    void caseAOneRelationDefinition(AOneRelationDefinition node);
    void caseAManyRelationDefinition(AManyRelationDefinition node);
    void caseAUnicityDefinition(AUnicityDefinition node);
    void caseADateDataType(ADateDataType node);
    void caseAIntegerDataType(AIntegerDataType node);
    void caseARealDataType(ARealDataType node);
    void caseAStringDataType(AStringDataType node);
    void caseAStringLength(AStringLength node);
    void caseAMayBeZero(AMayBeZero node);
    void caseAMoreIdentifier(AMoreIdentifier node);

    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTComma(TComma node);
    void caseTSemicolon(TSemicolon node);
    void caseTEntity(TEntity node);
    void caseTHas(THas node);
    void caseTMany(TMany node);
    void caseTOne(TOne node);
    void caseTRequired(TRequired node);
    void caseTTo(TTo node);
    void caseTUnique(TUnique node);
    void caseTZero(TZero node);
    void caseTDate(TDate node);
    void caseTInteger(TInteger node);
    void caseTReal(TReal node);
    void caseTString(TString node);
    void caseTNumber(TNumber node);
    void caseTIdentifier(TIdentifier node);
    void caseTBlank(TBlank node);
    void caseTComment(TComment node);
    void caseEOF(EOF node);
}
