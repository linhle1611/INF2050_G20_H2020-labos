/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.jberger.pergen.generated.node;

import org.jberger.pergen.generated.analysis.Analysis;

@SuppressWarnings("nls")
public final class AStringDataType extends PDataType
{
    private TString _string_;
    private PStringLength _stringLength_;

    public AStringDataType()
    {
        // Constructor
    }

    public AStringDataType(
        @SuppressWarnings("hiding") TString _string_,
        @SuppressWarnings("hiding") PStringLength _stringLength_)
    {
        // Constructor
        setString(_string_);

        setStringLength(_stringLength_);

    }

    @Override
    public Object clone()
    {
        return new AStringDataType(
            cloneNode(this._string_),
            cloneNode(this._stringLength_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStringDataType(this);
    }

    public TString getString()
    {
        return this._string_;
    }

    public void setString(TString node)
    {
        if(this._string_ != null)
        {
            this._string_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._string_ = node;
    }

    public PStringLength getStringLength()
    {
        return this._stringLength_;
    }

    public void setStringLength(PStringLength node)
    {
        if(this._stringLength_ != null)
        {
            this._stringLength_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stringLength_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._string_)
            + toString(this._stringLength_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._string_ == child)
        {
            this._string_ = null;
            return;
        }

        if(this._stringLength_ == child)
        {
            this._stringLength_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._string_ == oldChild)
        {
            setString((TString) newChild);
            return;
        }

        if(this._stringLength_ == oldChild)
        {
            setStringLength((PStringLength) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
